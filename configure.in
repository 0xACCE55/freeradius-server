AC_INIT(src/main/radiusd.c)
AC_CONFIG_HEADER(src/include/autoconf.h)
AC_REVISION($Revision$)dnl
dnl AC_PREFIX_DEFAULT(/usr/local)

dnl Check for GNU cc
AC_PROG_CC
AC_PROG_RANLIB

dnl Find GNU Make.
AC_CHECK_PROG(GMAKE, gmake, yes, no)
if test $GMAKE = no; then
  AC_PATH_PROG(MAKE, make, /usr/local/bin/make)
else
  AC_PATH_PROG(MAKE, gmake, /usr/local/gnu/bin/make)
fi
makever=`$ac_cv_path_MAKE --version 2>&1 | grep "GNU Make"`
if test -z "$makever"; then
  AC_MSG_ERROR(GNU Make is not installed.  Please download and install it
		from ftp://prep.ai.mit.edu/pub/gnu/make/ before continuing.)
fi

dnl Set Default CFLAGS
if test "$GCC" = "yes"; then
    CFLAGS="$CFLAGS -Wall -D_GNU_SOURCE"
fi

dnl extra argument: --with-logdir
logdir='${localstatedir}/log'
AC_MSG_CHECKING(logdir)
AC_ARG_WITH(logdir,
[  --with-logdir=DIR       Directory for logfiles [LOCALSTATEDIR/log] ],
[ case "$withval" in
    no)
	AC_MSG_ERROR(Need logdir)
	;;
    yes)
	;;
    *)
	logdir="$withval"
	;;
  esac ]
)
AC_SUBST(logdir)
AC_MSG_RESULT($logdir)

dnl extra argument: --with-radacctdir
radacctdir='${logdir}/radacct'
AC_MSG_CHECKING(radacctdir)
AC_ARG_WITH(radacctdir,
[  --with-radacctdir=PATH  Directory for detail files [LOGDIR/radacct] ],
[ case "$withval" in
    no)
	AC_MSG_ERROR(Need radacctdir)
	;;
    yes)
	;;
    *)
	radacctdir="$withval"
	;;
  esac ]
)
AC_SUBST(radacctdir)
AC_MSG_RESULT($radacctdir)

dnl extra argument: --with-raddbdir
raddbdir='${sysconfdir}/raddb'
AC_MSG_CHECKING(raddbdir)
AC_ARG_WITH(raddbdir,
[  --with-raddbdir=DIR     Directory for config files [SYSCONFDIR/raddb] ],
[ case "$withval" in
    no)
	AC_MSG_ERROR(Need raddbdir)
	;;
    yes)
	;;
    *)
	raddbdir="$withval"
	;;
  esac ]
)
AC_SUBST(raddbdir)
AC_MSG_RESULT($raddbdir)

dnl extra argument: --with-dbm
DBMLIB=
BUILDDBM=
AC_ARG_WITH(dbm,
[  --with-dbm              Compile in DBM support],
[ case "$withval" in
    no)
	;;
    yes)
	AC_DEFINE(WITH_DBM)
	DBMLIB=-ldbm
	BUILDDBM=builddbm
  esac ]
)

dnl extra argument: --with-ndbm
AC_ARG_WITH(ndbm,
[  --with-ndbm             Compile in NDBM support],
[ case "$withval" in
    no)
	;;
    yes)
	AC_DEFINE(WITH_NDBM)
	DBMLIB=-ldb
	BUILDDBM=builddbm
  esac ]
)

AC_SUBST(DBMLIB)
AC_SUBST(BUILDDBM)

dnl extra argument: --with-ascend-hack
AC_ARG_WITH(ascend-hack,
[  --with-ascend-hack      Include Ascend hacks],
[ case "$withval" in
    no)
	;;
    yes)
	AC_DEFINE(WITH_ASCEND_HACK)
  esac ]
)

dnl extra argument: --with-ascend-cpl=N
AC_ARG_WITH(ascend-cpl,
[  --with-ascend-cpl=N     Set Ascend Channels Per Line to N [23] ],
[ case "$withval" in
    *)
	AC_DEFINE_UNQUOTED(ASCEND_CHANNELS_PER_LINE, $withval)
  esac ]
)

dnl extra argument: --with-ntdomain-hack
AC_ARG_WITH(ntdomain-hack,
[  --with-ntdomain-hack    Include NT Domain hack],
[ case "$withval" in
    no)
	;;
    yes)
	AC_DEFINE(WITH_NTDOMAIN_HACK)
  esac ]
)

dnl extra argument: --with-spcj-hack
AC_ARG_WITH(spcj-hack,
[  --with-spcj-hack        Include Specialix Jetstream hacks],
[ case "$withval" in
    no)
	;;
    yes)
	AC_DEFINE(WITH_SPECIALIX_JETSTREAM_HACK)
  esac ]
)

dnl extra argument: --with-dict-nocase
AC_ARG_WITH(dict-nocase,
[  --with-dict-nocase      Make dictionary case-independant],
[ case "$withval" in
    no)
	;;
    yes)
	AC_DEFINE(WITH_DICT_NOCASE)
  esac ]
)

dnl extra argument: --with-attrib-nmc
ATTRIB_NMC=
AC_ARG_WITH(attrib-nmc,
[  --with-attrib-nmc       Include USR-style vendor specific attributes (default=yes)],
[ ATTRIB_NMC=$withval
 case "$withval" in
    no)
	;;
    yes)
	AC_DEFINE(ATTRIB_NMC)
  esac ]
)
dnl if they haven't said to use it, do so.
if test "$ATTRIB_NMC" = "";then
  AC_DEFINE(ATTRIB_NMC)
fi

dnl extra argument: --with-ascend-binary
ASCEND_BINARY=
AC_ARG_WITH(ascend-binary,
[  --with-ascend-binary    Include support for Ascend binary filter attributes (default=yes)],
[ ASCEND_BINARY=$withval
 case "$withval" in
    no)
	;;
    yes)
	AC_DEFINE(ASCEND_BINARY)
  esac ]
)
dnl if they haven't said to use it, do so.
if test "$ASCEND_BINARY" = "";then
  AC_DEFINE(ASCEND_BINARY)
fi


dnl extra argument: --with-dynamic_modules
WITH_DYNAMIC_MODULES=yes
AC_ARG_WITH(dynamic-modules,
[  --with-dynamic-modules  Use runtime loadable modules ],
[ case "$withval" in
    *)
	WITH_DYNAMIC_MODULES=$withval
  esac ]
)

dnl See what include-style is used by the make program.
dnl AC_MSG_CHECKING(include style for make)
dnl echo "include /dev/null" > testmake.$$
dnl echo "all:" >> testmake.$$
dnl make -f testmake.$$ >/dev/null 2>&1
dnl if test $? = 0
dnl then
dnl 	INCLUDE=include
dnl 	IQUOTE=
dnl else
dnl 	INCLUDE=.include
dnl 	IQUOTE='"'
dnl fi
dnl rm -f testmake.$$
dnl AC_MSG_RESULT(" $INCLUDE")
dnl AC_SUBST(INCLUDE)
dnl AC_SUBST(IQUOTE)

dnl See if this is OS/2
AC_MSG_CHECKING(type of OS)
OS=`uname -s`
AC_MSG_RESULT($OS)
if test "$OS" = "OS/2"; then
	LIBPREFIX=
else
	LIBPREFIX=lib
fi
AC_SUBST(LIBPREFIX)

dnl Check for programs
AC_PATH_PROG(PERL, perl, /usr/local/bin/perl)
if test ! -x $ac_cv_path_PERL; then
  AC_MSG_ERROR(perl not found - fatal)
fi
AC_PATH_PROG(SNMPGET, snmpget, /usr/local/bin/snmpget)
AC_PATH_PROG(RUSERS, rusers, /usr/bin/rusers)

dnl Check for headers
AC_HEADER_DIRENT
AC_HEADER_STDC

AC_CHECK_HEADERS( \
	crypt.h \
	errno.h \
	resource.h \
	getopt.h \
	malloc.h \
	utmp.h \
	sys/select.h \
	dlfcn.h \
	regex.h \
	syslog.h
)

AC_CHECK_FUNCS( \
	getopt_long \
	lockf \
	strsignal \
	snprintf \
	vsnprintf \
	setsid \
	strncasecmp \
	strcasecmp \
	inet_aton \
	gethostname \
	setlinebuf \
	getusershell \
)

dnl Check for socklen_t
AC_TRY_COMPILE([#include <sys/types.h>
#include <sys/socket.h>],
  [socklen_t foo],
  AC_DEFINE(HAVE_SOCKLEN_T),
)

dnl Check for libcrypt
dnl We use crypt(3) which may be in libc, or in libcrypt (eg FreeBSD)
AC_CHECK_LIB(crypt, crypt,
  CRYPTLIB="-lcrypt"
)
AC_SUBST(CRYPTLIB)
if test "$CRYPTLIB" != ""; then
  AC_DEFINE(HAVE_CRYPT)
else
  AC_CHECK_FUNC(crypt, AC_DEFINE(HAVE_CRYPT))
fi

dnl Check for -lsocket
AC_CHECK_LIB(socket, getsockname,
  SOCKETLIB="-lsocket"
)
AC_SUBST(SOCKETLIB)

dnl Check for -lnsl. We don't need yp_all, but usually if we want to
dnl link against -lsocket we need to include -lnsl as well.
AC_CHECK_LIB(nsl, yp_all,
  NSLLIB="-lnsl",
)
AC_SUBST(NSLLIB)

dnl ***********************
dnl  This next bit is stolen from glib, and modified to work for FreeRADIUS.
dnl ***********************
MODULE_LIBS=
MODULE_CFLAGS=
MODULE_LDFLAGS=
MODULE_HAVE_DLERROR=0
dnl *** dlopen() and dlsym() in system libraries
if test -z "$DYNAMIC_MODULES"; then
	AC_CHECK_FUNC(dlopen,
		AC_CHECK_FUNC(dlsym,
			[ DYNAMIC_MODULES=DYNAMIC_MODULES_DL HAVE_DLOPEN=1 ]
		,)
	,)
fi

dnl *** dlopen() and dlsym() in libdl
if test -z "$DYNAMIC_MODULES"; then
	AC_CHECK_LIB(dl, dlopen,
		AC_CHECK_LIB(dl, dlsym,
			MODULE_LIBS=-ldl
			[ DYNAMIC_MODULES=DYNAMIC_MODULES_DL HAVE_DLOPEN=1 ]
		,)
	,)
fi

dnl *** shl_load() in libdld (HP-UX)
if test -z "$DYNAMIC_MODULES"; then
        AC_MSG_CHECKING(how to export all symbols)
        SAVED_LDFLAGS=$LDFLAGS

        LDFLAGS="$LDFLAGS -Wl,-E"
        AC_TRY_LINK(,[ return 0; ],
                [ MODULE_LDFLAGS="-Wl,-E" ],[
                LDFLAGS="$SAVED_LDFLAGS -bexpall"
                AC_TRY_LINK(,[ return 0; ],
                        MODULE_LDFLAGS="-bexpall",
                        MODULE_LDFLAGS=""
                )
        ])

        LDFLAGS=$SAVED_LDFLAGS
        AC_MSG_RESULT($MODULE_LDFLAGS)

	AC_CHECK_LIB(dld, shl_load,
		MODULE_LIBS=-ldld
		DYNAMIC_MODULES=DYNAMIC_MODULES_DLD
	,)
fi

dnl *** how to build a shared object
if test "$DYNAMIC_MODULES" != ""; then
        AC_MSG_CHECKING(how to build a shared object)
        LDFLAGS_orig=$LDFLAGS

        LDFLAGS="$LDFLAGS -Bshareable"
        AC_TRY_LINK(,[ return 0; ],
                [ MODULE_LDFLAGS="-Bshareable" ],
                  MODULE_LDFLAGS=""
        )

dnl *** Bret Watson <Bret.Watson@ticm.com> says HP ld uses '-b -B deferred'
	if test "$MODULE_LDFLAGS" = ""; then
          LDFLAGS="$LDFLAGS_orig -b -B deferred"
          AC_TRY_LINK(,[ return 0; ],
                  [ MODULE_LDFLAGS="-b -B deferred" ],
                    MODULE_LDFLAGS=""
          )
	fi

        LDFLAGS=$LDFLAGS_orig
	AC_MSG_RESULT(ld $MODULE_LDFLAGS)
fi

dnl *** additional checks for DYNAMIC_MODULES_DL
if test "$DYNAMIC_MODULES" = "DYNAMIC_MODULES_DL"; then
	dnl Check if the C compiler supports -rdynamic
	AC_MSG_CHECKING(whether $CC accepts -rdynamic...)
	CFLAGS_orig="$CFLAGS"
	CFLAGS="$CFLAGS -rdynamic"
	AC_TRY_COMPILE([], [int x = 0], DAEMON_LDFLAGS=-rdynamic)

	if test -n "DAEMON_LDFLAGS"; then
	  AC_MSG_RESULT(yes)
	else
	  AC_MSG_RESULT(no)
	fi
	CFLAGS="$CFLAGS_orig"

	LIBS_orig="$LIBS"
	LDFLAGS_orig="$LDFLAGS"
	LIBS="$LIBS $MODULE_LIBS"
	LDFLAGS="$LDFLAGS $MODULE_LDFLAGS"

dnl *** check whether we need preceeding underscores
	AC_MSG_CHECKING(for preceeding underscore in symbols)
	AC_CACHE_VAL(rlm_cv_uscore,[
		AC_TRY_RUN([
		#include <dlfcn.h>
                int rlm_underscore_test (void) { return 42; }
		int main() {
		  void *f1 = (void*)0, *f2 = (void*)0, *handle;
		  handle = dlopen ((void*)0, 0);
		  if (handle) {
		    f1 = dlsym (handle, "rlm_underscore_test");
		    f2 = dlsym (handle, "_rlm_underscore_test");
		  } return (!f2 || f1);
		}],
			rlm_cv_uscore=yes,
			rlm_cv_uscore=no,
			rlm_cv_uscore=no
		)
		rm -f plugin.c plugin.o plugin.lo
	])
	AC_MSG_RESULT($rlm_cv_uscore)
	if test "x$rlm_cv_uscore" = "xyes"; then
		AC_DEFINE(MODULE_NEED_USCORE)
	fi

	LDFLAGS="$LDFLAGS_orig"
dnl *** check for having dlerror()
	AC_CHECK_FUNC(dlerror,
		MODULE_HAVE_DLERROR=1,
		MODULE_HAVE_DLERROR=0)
	LIBS="$LIBS_orig"
fi
dnl *** done, have e got an implementation?
if test -z "$DYNAMIC_MODULES"; then
	DYNAMIC_MODULES=0
fi

AC_SUBST(DYNAMIC_MODULES)
AC_DEFINE(HAVE_DLOPEN)
AC_SUBST(DAEMON_LDFLAGS)
AC_SUBST(MODULE_LIBS)
AC_SUBST(MODULE_CFLAGS)
AC_SUBST(MODULE_LDFLAGS)
AC_SUBST(MODULE_HAVE_DLERROR)

AC_OUTPUT(\
	
	./Make.inc \
	./src/include/build-radpaths-h \
	./src/main/checkrad.pl \
	./src/main/radlast \
	./src/main/radtest \
	./scripts/rc.radiusd \
	./scripts/radwatch \
)

AC_OUTPUT_COMMANDS([echo timestamp > src/include/stamp-h])
AC_OUTPUT_COMMANDS([(cd ./src/include && /bin/sh ./build-radpaths-h)])
AC_OUTPUT_COMMANDS([(cd ./src/main   && chmod +x checkrad.pl radlast radtest)])
