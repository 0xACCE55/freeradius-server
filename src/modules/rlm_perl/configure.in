AC_PREREQ([2.53])
AC_INIT(rlm_perl.c)
AC_REVISION($Revision$)
AC_DEFUN(modname,[rlm_perl])

m4_include([ax_with_prog.m4])

if test x$with_[]modname != xno; then

	AC_PROG_CC
	AC_PROG_CPP

	dnl put configuration checks here.
	dnl set $fail to what's missing, on fatal errors.
	dnl use AC_MSG_WARN() on important messages.

    	AX_WITH_PROG([PERL],[perl],[not-found],[${PATH}:/usr/bin:/usr/local/bin])
	if test "$PERL" = "not-found" -o ! -x "$PERL"; then
           fail=$fail" perl"
	else
	  old_CFLAGS="$CFLAGS"
	  
	  AC_MSG_CHECKING([for Perl ccopts])
	  perl_cflags=$($PERL -MExtUtils::Embed -e ccopts | sed ['s/-arch [^ ]*[ ]*//g'])
          CFLAGS+=" $perl_cflags"
          AC_MSG_RESULT([$perl_cflags])

	  smart_try_dir=
	  FR_SMART_CHECK_INCLUDE(EXTERN.h)
	  if test "x$ac_cv_header_EXTERN_h" != "xyes"; then
		fail="$fail EXTERN.h"
		targetname=
	  fi

	  FR_SMART_CHECK_INCLUDE(perl.h, [#include <EXTERN.h>])
	  if test "x$ac_cv_header_perl_h" != "xyes"; then
		fail="$fail EXTERN.h"
		targetname=
	  fi

	  old_LIBS="$LIBS"
	  
	  AC_MSG_CHECKING([for Perl ldopts])
	  perl_ldflags=$($PERL -MExtUtils::Embed -e ldopts | sed ['s/-arch [^ ]*[ ]*//g'])
	  LIBS+=" $perl_ldflags"
          AC_MSG_RESULT([$perl_ldflags])
	  
	  AC_TRY_LINK([extern char boot_DynaLoader();],
		      [ boot_DynaLoader()],
		      BROKEN=,
		      BROKEN="yes")

	  if test "x$BROKEN" != "x"; then
		fail="$fail libperl.so"
		targetname=
          fi

	  AC_TRY_LINK([extern char Perl_hv_store();],
		      [ Perl_hv_store()],
		      BROKEN=,
		      BROKEN="yes")

	 if test "x$BROKEN" != "x"; then
	 	fail="$fail libperl.so"
		targetname=
	  fi

          CFLAGS=$old_CFLAGS
          LIBS=$old_libs
        fi
	targetname=modname

else
	targetname=
	echo \*\*\* module modname is disabled.  # keep this!  Don't change!
fi

dnl  Don't change this section.
if test x"$fail" != x""; then
	if test x"${enable_strict_dependencies}" = x"yes"; then
		AC_MSG_ERROR([set --without-]modname[ to disable it explicitly.])
	else
		AC_MSG_WARN([silently not building ]modname[.])
		AC_MSG_WARN([FAILURE: ]modname[ requires: $fail.]);
		
		targetname=
	fi
fi


AC_SUBST(perl_cflags)
AC_SUBST(perl_ldflags)

AC_CONFIG_HEADER(config.h)

AC_SUBST(targetname)
AC_OUTPUT(all.mk)
