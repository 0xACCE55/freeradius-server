define([AC_CACHE_LOAD], )dnl Keep this!  Don't change!
define([AC_CACHE_SAVE], )dnl Keep this!  Don't change!
AC_INIT(sql_freetds.c)
AC_REVISION($Revision$)
AC_DEFUN(modname,[rlm_sql_freetds])

if test x$with_[]modname != xno; then

    AC_PROG_CC
    AC_PROG_CPP
    
    AC_ARG_WITH(freetds-include-dir,
	[  --with-freetds-include-dir=DIR       Directory where the freetds includes may be found ],
	[ freetds_include_dir="$withval" ]
    )

    AC_ARG_WITH(freetds-lib-dir,
	[  --with-freetds-lib-dir=DIR       Directory where the freetds libraries may be found ],
        [ freetds_lib_dir="$withval" ]
    )

    AC_ARG_WITH(freetds-dir,
	[  --with-freetds-dir=DIR       Base directory where freetds is installed ],
	[ freetds_lib_dir="$withval/lib"
	  freetds_include_dir="$withval/include"]
    )

    targetname=modname
    
    AC_MSG_CHECKING([for freetds headers: tds.h, tdsconvert.h])

    AC_TRY_COMPILE([#include <tds.h>
		    #include <tdsconvert.h>], [int a = 1;],
		    freetds_INCLUDE=" ",
		    freetds_INCLUDE=
    )

    if test "x$freetds_INCLUDE" = "x"; then
	old_CFLAGS="$CFLAGS"

	for try in $freetds_include_dir /usr/include /usr/local/include; do
	    CFLAGS="$old_CFLAGS -I$try"
	    AC_TRY_COMPILE([#include <tds.h>
			    #include <tdsconvert.h>], [int a = 1;],
			    freetds_INCLUDE="$CFLAGS",
			    freetds_INCLUDE=
	    )
    
	    if test "x$freetds_INCLUDE" != "x"; then
		break;
	    fi
	done
	
	CFLAGS="$old_CFLAGS"
    fi

    if test "x$freetds_INCLUDE" = "x"; then
	AC_MSG_RESULT(no)
	AC_MSG_WARN([freetds headers not found.  Use --with-freetds-include-dir=<path>.])
	targetname=   # disabled module
    else
	sql_freetds_cflags="$freetds_INCLUDE"
	AC_MSG_RESULT(yes)
  	
	AC_MSG_CHECKING([for freetds library])

	old_LIBS="$LIBS"
	old_CFLAGS="$CFLAGS"
	CFLAGS="$sql_freetds_cflags"

	for try in $freetds_lib_dir /lib /usr/lib /usr/local/lib; do
	    LIBS="$old_LIBS -L$try -ltds"
	    AC_TRY_LINK([#include <tds.h>
			extern TDSLOGIN *tds_alloc_login();],
			[TDSLOGIN *test = tds_alloc_login()],
			freetds_LIBS="-L$try -ltds",
			freetds_LIBS=
	    )
	    if test "x$freetds_LIBS" != "x"; then
		break;
	    fi
	done

	LIBS="$old_LIBS"
	CFLAGS="$old_CFLAGS"
    
    
	if test "x$freetds_LIBS" = "x"; then
	    AC_MSG_RESULT(no)
	    freetds_INCLUDE=
	    AC_MSG_WARN([freetds libraries not found.  Use --with-freetds-lib-dir=<path>.])
	    targetname=   # disabled module
	else
    	    sql_freetds_libs="$freetds_LIBS"
	    AC_MSG_RESULT(yes)

	    old_LIBS="$LIBS"
	    LIBS="$sql_freetds_libs"
	    AC_CHECK_FUNC(tds_get_locale)
	    LIBS="$old_LIBS"

	    if test "x$ac_cv_func_tds_get_locale" = "xyes"; then
		AC_DEFINE(HAVE_TDS_GET_LOCALE, yes)
	    fi
	    
	    AC_CHECK_FUNCS(sprintf)
	    if test "x$ac_cv_func_sprintf" = "xno"; then
		targetname=   # disabled module
		AC_MSG_WARN([FAILURE: ]modname[ requires: string.h])
	    fi
	fi
    fi

    if test "x$targetname" = "x"; then
	AC_MSG_WARN([sql submodule 'freetds' disabled])
    fi

    sql_freetds_cxxflags="$CXXFLAGS"
    sql_freetds_ldflags="$LDFLAGS"

    AC_SUBST(sql_freetds_cflags)
    AC_SUBST(sql_freetds_cxxflags)
    AC_SUBST(sql_freetds_ldflags)
    AC_SUBST(sql_freetds_libs)
    AC_SUBST(targetname)
    
    AC_CONFIG_HEADER(config.h)
    AC_OUTPUT(Makefile)
fi