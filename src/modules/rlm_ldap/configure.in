AC_INIT(rlm_ldap.c)
AC_REVISION($Revision$)
AC_DEFUN(modname,[rlm_ldap])

fail=
SMART_LIBS=
SMART_CLFAGS=
if test x$with_[]modname != xno; then

	AC_SMART_CHECK_INCLUDE(lber.h)
	AC_SMART_CHECK_INCLUDE(ldap.h)
	AC_SMART_CHECK_LIB(sasl, sasl_encode)
	AC_SMART_CHECK_LIB(ssl, SSL_new)
	AC_SMART_CHECK_LIB(crypto, DH_new)

	AC_SMART_CHECK_LIB(lber, ber_init)
        if test "x$ac_cv_lib_lber_ber_init" != "xyes"; then
	  fail="$fail liblber"
        else
          if test "x$ac_cv_header_pthread_h" = "xyes"; then
    	    AC_SMART_CHECK_LIB(ldap_r, ldap_initialize)
            if test "x$ac_cv_lib_ldap_r_ldap_initialize" != "xyes"; then
 	      fail="$fail libldap_r"
            fi
          else
  	    AC_SMART_CHECK_LIB(ldap, ldap_initialize)
            if test "x$ac_cv_lib_ldap_r_ldap_initialize" != "xyes"; then
 	      fail="$fail libldap_r"
            fi
          fi
        fi

	targetname=modname
else
	targetname=
	echo \*\*\* module modname is disabled.
fi

if test x"$fail" != x""; then
	if test x"${enable_strict_dependencies}" = x"yes"; then
		AC_MSG_ERROR([set --without-]modname[ to disable it explicitly.])
	else
		AC_MSG_WARN([silently not building ]modname[.])
		AC_MSG_WARN([FAILURE: ]modname[ requires: $fail.])
		if test x"$headersuggestion" != x; then
			AC_MSG_WARN([$headersuggestion]) 
		fi
		if test x"$libsuggestion" != x; then
			AC_MSG_WARN([$libsuggestion]) 
		fi
		targetname=""
	fi
fi

ldap_ldflags=$SMART_LIBS
ldap_cflags=$SMART_CFLAGS
AC_SUBST(ldap_ldflags)
AC_SUBST(ldap_cflags)
AC_SUBST(targetname)
AC_OUTPUT(Makefile)
