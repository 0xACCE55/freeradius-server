AC_PREREQ([2.53])
AC_INIT(rlm_rest.c)
AC_REVISION($Revision$)
AC_DEFUN(modname,[rlm_rest])
AC_CONFIG_HEADER(config.h)
m4_include([libcurl_check_config.m4])

if test x$with_[]modname != xno; then

	AC_PROG_CC
	AC_PROG_CPP

	dnl put configuration checks here.
	dnl set $fail to what's missing, on fatal errors.
	dnl use AC_MSG_WARN() on important messages.
	
	LIBCURL_CHECK_CONFIG

	if test "x$libcurl_cv_lib_curl_usable" != "xyes"; then
		fail="$fail libcurl"
	else	
		if test x$libcurl_protocol_HTTP != xyes; then
			fail="$fail libcurl_protocol_http"
		fi
	
		if test x$libcurl_protocol_HTTPS != xyes || test x$libcurl_feature_SSL != xyes; then
			AC_MSG_WARN([silently building without HTTPS support. requires: libcurl_protocol_https.])
		fi
	fi
	
	have_json=
	AC_CHECK_HEADERS(json/json.h)
	
	if test "x$ac_cv_header_json_json_h" == "xyes"; then
		AC_CHECK_LIB([json-c], [json_object_init], [have_json="yes"], [])		
	fi
	
	if test "x$have_json" == "xyes"; then
		rest_ldflags+=" -ljson-c"
		AC_DEFINE([HAVE_JSON],[1],[Build with JSON support from json-c])
	else
		AC_MSG_WARN([silently building without JSON support. requires: json-c.])
	fi

	targetname=modname     # keep this!  Don't change!
else
	targetname=            # keep this!  Don't change!
	echo \*\*\* module modname is disabled.  # keep this!  Don't change!
fi

dnl  Don't change this section.
if test x"$fail" != x""; then
	if test x"${enable_strict_dependencies}" = x"yes"; then
		AC_MSG_ERROR([set --without-]modname[ to disable it explicitly.])
	else
		AC_MSG_WARN([silently not building ]modname[.])
		AC_MSG_WARN([FAILURE: ]modname[ requires: $fail.]);
		targetname=""
	fi
fi

rest_ldflags="${LIBCURL} ${rest_ldflags}"

AC_SUBST(rest_cflags)
AC_SUBST(rest_ldflags)

AC_SUBST(targetname)
AC_OUTPUT(Makefile)
AC_OUTPUT(all.mk)
