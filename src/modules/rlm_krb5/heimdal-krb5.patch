--- rlm_krb5.c.orig	Mon Jan 14 10:26:36 2002
+++ rlm_krb5.c	Wed Dec 19 14:35:54 2001
@@ -70,14 +70,12 @@
 static int krb5_auth(void *instance, REQUEST *request)
 {
 	int r;
-        krb5_data tgtname = {
-                0,
-                KRB5_TGS_NAME_SIZE,
-                KRB5_TGS_NAME
-        };
-        krb5_creds kcreds;
-	krb5_context context = *(krb5_context *) instance; /* copy data */
+
+	krb5_error_code ret;
+	krb5_ccache id;
 	const char *user, *pass;
+	krb5_context context = *(krb5_context *) instance;
+        krb5_principal userP;
 
 	/*
 	 *	We can only authenticate user requests which HAVE
@@ -115,35 +113,26 @@
 	/*
 	 *	Actually perform the authentication
 	 */
-	memset((char *)&kcreds, 0, sizeof(kcreds));
 	
-	if ( (r = krb5_parse_name(context, user, &kcreds.client)) ) {
+	if ( (r = krb5_parse_name(context, user, &userP)) ) {
 		radlog(L_AUTH, "rlm_krb5: [%s] krb5_parse_name failed: %s",
 		       user, error_message(r));
 		return RLM_MODULE_REJECT;
 	}
 
-	if ( (r = krb5_build_principal_ext(context, &kcreds.server,
-		krb5_princ_realm(context, kcreds.client)->length,
-		krb5_princ_realm(context, kcreds.client)->data,
-		tgtname.length,
-		tgtname.data,
-		krb5_princ_realm(context, kcreds.client)->length,
-		krb5_princ_realm(context, kcreds.client)->data,
-		0)) ) {
-		radlog(L_AUTH, "rlm_krb5: [%s] krb5_build_principal_ext failed: %s",
-			user, error_message(r));
-		return RLM_MODULE_REJECT;
-	}
+	radlog(L_AUTH, "rlm_krb5: Parsed name is: %s@%s\n", *userP->name.name_string.val, userP->realm);
 
-	if ( (r = krb5_get_in_tkt_with_password(context,
-		0, NULL, NULL, NULL, pass, 0, &kcreds, 0)) ) {
-		radlog(L_AUTH, "rlm_krb5: [%s] krb5_g_i_t_w_p failed: %s",
-			user, error_message(r));
-		return RLM_MODULE_REJECT;
-	} else {
+	krb5_cc_default(context, &id);
+
+	ret = krb5_verify_user(context,
+			       userP,
+			       id,
+			       pass, 1, "radius");
+	
+	if (ret == 0)
 		return RLM_MODULE_OK;
-	}
+
+	radlog(L_AUTH, "rlm_krb5: failed verify_user: %s (%s@%s )", error_message(ret), *userP->name.name_string.val, userP->realm);
 	
 	return RLM_MODULE_REJECT;
 }
