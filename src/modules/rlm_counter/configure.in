AC_INIT(rlm_counter.c)
AC_REVISION($Revision$)
AC_DEFUN(modname,[rlm_counter])

if test x$with_[]modname != xno; then

	AC_PROG_CPP
	AC_SMART_CHECK_INCLUDE(gdbm.h)
	AC_SMART_CHECK_LIB(gdbm, gdbm_open)
	if test "x$ac_cv_lib_gdbm_gdbm_open" != "xyes"; then
		fail="$fail libgdbm"
	fi

	AC_MSG_CHECKING(to see GDBM_SYNC status)
	AC_EGREP_CPP(found-gdbm-sync, [
#include <gdbm.h>
#ifdef GDBM_SYNC
	found-gdbm-sync!
#else
	not found.  this version must use sync by default.
#endif
		], [
			AC_DEFINE(NEED_GDBM_SYNC, yes) 
			AC_MSG_RESULT(needs it.)
		], [
			AC_MSG_RESULT(SYNCs by default.)
		])

	targetname=modname
else
	targetname=
	echo \*\*\* module modname is disabled.
fi

if test x"$fail" != x""; then
	if test x"${enable_strict_dependencies}" = x"yes"; then
		AC_MSG_ERROR([set --without-]modname[ to disable it explicitly.])
	else
		AC_MSG_WARN([silently not building ]modname[.])
		AC_MSG_WARN([FAILURE: ]modname[ requires: $fail.]); 
		targetname=""
	fi
fi

counter_ldflags=$SMART_LIBS
counter_cflags=$SMART_CFLAGS
AC_SUBST(counter_ldflags)
AC_SUBST(counter_cflags)
AC_SUBST(targetname)
AC_CONFIG_HEADER(config.h)
AC_OUTPUT(Makefile)
