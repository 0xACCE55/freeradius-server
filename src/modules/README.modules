  New module authors should look at 'rlm_example' for hints on how
to write and configure a new module.


Each module has a name and 5 entry points.

char *name;

  Unique name, that can be used with "Auth-Type = name".
  In that case, module->authenticate is called

int init(int argc, char **argv);

  (Re-)initializes the module. Is also called at SIGHUP. The arguments
  passed are the extra arguments after the module name in /etc/raddb/modules

  Returns:	 0	on success
		-1	on failure

int authorize(REQUEST *request, char *username,
		VALUE_PAIR **check_items, VALUE_PAIR **reply_items);

  Looks up the user. For example, the authorize() function in rlm_files.c
  scans the "users" file for the username and fills out check_items
  and reply_items.

  Returns:	 0 RLM_AUTZ_OK        on success
		-1 RLM_AUTZ_NOTFOUND  on success, but user not found
                -2 RLM_AUTZ_FAIL      on failure
		-3 RLM_AUTZ_REJECT    reject user
		 1 RLM_AUTZ_HANDLED   on success, but don't reply

  If there are multiple authorization modules, they are executed sequentially
  until one doesn't return with RLM_NOTFOUND.

  On RLM_AUTZ_FAIL, we don't continue with the authentication stage but quit
  right away without sending a reply to the origination server. This is
  useful if for example we cannot (temporarily) connect to a SQL or LDAP
  server, so that the client will retry or fail over to a backup server.

  RLM_AUTZ_HANDLED means the function itself sent (or will send) the reply
  to the client, so don't continue with the authentication stage.

int authenticate(*authenticate)(REQUEST *request, char *username,
		char *password);

  Authenticates the user. This is called if the check-item returned by
  the authorization contains an Auth-Type = "name" where "name" is
  the name of the module.

  Returns:	-2 RLM_AUTH_FAIL     on failed authentication and we do not
				     want to send a reply to the client.
  		-1 RLM_AUTH_REJECT   on failed authorization and we want to
				     reject the user.
		 0 RLM_AUTH_OK       User authenticated OK
		 1 RLM_AUTH_HANDLED  User authenticated OK, and the authenticate
				     function sent the reply to the client.

int accounting(REQUEST *request)

  Does accounting. All registered accounting functions are called in
  order, even if one or more of them fails. Only when RLM_HANDLED is
  returned the loop breaks. If one or more accouting functions failed, a
  reply is not sent to the client (so that the client retries).

  Returns:	-2 RLM_ACCT_FAIL	Accounting failed
		-1 RLM_ACCT_FAIL_SOFT	Accounting failed, but ignore
		 0 RLM_ACCT_OK		Accounting OK
		 1 RLM_ACCT_HANDLED	OK, and already sent reply to client
 
int detach(void);

  Unregister all compare functions, deallocate all memory, close
  all connections etc. Prepare to be unloaded (if loadable module).

