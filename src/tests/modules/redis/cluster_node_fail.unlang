#
#  Run the "redis" xlat
#
$INCLUDE cluster_reset.inc

#  Hashes to Redis cluster node master 1
if (!("%(redis:SET b 'boom')" == 'OK')) {
	test_fail
}

#  Leave some time (100ms) for the synchronisation
&Tmp-String-0 := `/bin/sleep 0.1`

#  Note the current master
&Tmp-String-1 := %(redis_node:b 0)

#  Cause one of the redis cluster nodes to SEGV
if ("%(redis:@%(redis_node:b 0) DEBUG SEGFAULT)" != '') {
	test_fail
}

#  Forcefully failover the slave for that node
if (!("%(redis:@%(redis_node:b 1) CLUSTER FAILOVER TAKEOVER)" == 'OK')) {
	test_fail
}

#  Allow time for the takeover to propagate to other nodes
foreach &control.Tmp-Integer-0 {
	if (%(redis_node:b 0) != &Tmp-String-1) {
		break
	}
	&Tmp-String-0 := `/bin/sleep 0.5`
}

if (!("%(redis:GET b)" == 'boom')) {
	test_fail
}

#  Kill that one too
if ("%(redis:@%(redis_node:b) DEBUG SEGFAULT)" != '') {
	test_fail
}

# No alternatives...
if ("%(redis:GET b)" == 'boom') {
	test_fail
}

test_pass
