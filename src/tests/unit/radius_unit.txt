# Load libfreeradius-radius
load radius
load-dictionary radius

#
#  And using the dictionaries
#
encode-pair Unit-EVS-5-Integer = 1, Unit-EVS-5-Integer = 2
data f5 0d 1a 00 00 00 2c 50 01 00 00 00 01 f5 0d 1a 00 00 00 2c 50 01 00 00 00 02

attribute Unit-Ext-241-Integer = 6809
data Unit-Ext-241-Integer = 6809

encode-pair Unit-Ext-241-Integer = 6809
data f1 07 f1 00 00 1a 99

decode-pair -
data Unit-Ext-241-Integer = 6809

#
#  Encoded as two different top-level attributes.
#
encode-pair Unit-Ext-241-Integer = 6809, Unit-Ext-241-Integer = 2112
data f1 07 f1 00 00 1a 99 f1 07 f1 00 00 08 40

#
#  EVS data types
#
encode-pair Unit-EVS-Integer = 6809
data f2 0c 1a 00 00 2c 50 01 00 00 1a 99

decode-pair -
data Unit-EVS-Integer = 6809

#
#  This is ambiguous, so we do something.  Anything...
#  When we have nested VALUE_PAIRs, we can just follow
#  that format instead of guessing.
#
encode-pair Unit-TLV-Integer = 1, Unit-TLV-Integer = 2
data f1 0f f3 01 06 00 00 00 01 01 06 00 00 00 02

decode-pair -
data Unit-TLV-Integer = 1, Unit-TLV-Integer = 2

#
#  And "long extended" EVS
#
encode-pair Unit-EVS-5-Integer = 1, Unit-EVS-5-Integer = 2
data f5 0d 1a 00 00 00 2c 50 01 00 00 00 01 f5 0d 1a 00 00 00 2c 50 01 00 00 00 02

decode-pair -
data Unit-EVS-5-Integer = 1, Unit-EVS-5-Integer = 2

encode-pair Event-Timestamp := 864000
data 37 06 00 0d 2f 00

# Same as from "data_types.txt"
decode-pair -
data Event-Timestamp = "Jan 11 1970 00:00:00 GMT"

encode-pair -
data 37 06 00 0d 2f 00

# Can we parse RFC 3339 dates correctly?
attribute Unit-TLV-Milliseconds = "2019-08-21T07:40:31.123-04:00"
data Unit-TLV-Milliseconds = "2019-08-21T03:40:31.123Z"

#
#  Time delta in milliseconds.
#
attribute Unit-TLV-Delta-MSec = 5
data Unit-TLV-Delta-MSec = 5

encode-pair -
data fe 08 02 06 00 00 00 05

decode-pair -
data Unit-TLV-Delta-MSec = 5

attribute Unit-TLV-Delta-Sec = 10
data Unit-TLV-Delta-Sec = 10

encode-pair -
data fe 08 03 06 00 00 00 0a

decode-pair -
data Unit-TLV-Delta-Sec = 10
