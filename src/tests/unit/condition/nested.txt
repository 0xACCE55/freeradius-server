#
#  Tests for parsing nested expressions
#
#  $Id$
#

proto-dictionary radius

# A nested attribute with partial path
condition &request.Vendor-Specific.WiMAX.Packet-Flow-Descriptor.Uplink-QOS-Id
match &request.Vendor-Specific.WiMAX.Packet-Flow-Descriptor.Uplink-QOS-Id

# A nested attribute with a full path (and no filters)
condition &request.Vendor-Specific.WiMAX.Packet-Flow-Descriptor.Uplink-QOS-Id
match &request.Vendor-Specific.WiMAX.Packet-Flow-Descriptor.Uplink-QOS-Id

# A nested attribute with an instance selector
condition &request.Vendor-Specific.WiMAX.Packet-Flow-Descriptor[5].Uplink-QOS-Id
match &request.Vendor-Specific.WiMAX.Packet-Flow-Descriptor[5].Uplink-QOS-Id

# A nested attribute with an instance selector at both levels
condition &request.Vendor-Specific.WiMAX.Packet-Flow-Descriptor[*].Uplink-QOS-Id[0]
match &request.Vendor-Specific.WiMAX.Packet-Flow-Descriptor[*].Uplink-QOS-Id[0]

# Unparsed child - We won't know this is an error until pass2

tmpl-rules allow_unresolved=yes

condition &request.Unparsed-Child.Uplink-QOS-Id[0]
match &request.Unparsed-Child.Uplink-QOS-Id[0]

tmpl-rules allow_unresolved=no

#
#  Errors
#
# Malformed filter
condition &request.Vendor-Specific.WiMAX.Packet-Flow-Descriptor[*.Uplink-QOS-Id[0]
match ERROR offset 56: No closing ']' for array index

# Too many dots, point to the thing that's wrong
condition &request.Vendor-Specific.WiMAX.Packet-Flow-Descriptor..Uplink-QOS-Id[0]
match ERROR offset 55: Zero length attribute name: Unresolved attributes are not allowed here

# Trailing dots, point to the dot that's an error
condition &request.Vendor-Specific.WiMAX.Packet-Flow-Descriptor.Uplink-QOS-Id[0].
match ERROR offset 71: Parent type of nested attribute Uplink-QOS-Id must be of type "struct", "tlv", "vendor", "vsa" or "group", got "uint8"

count
match 19
