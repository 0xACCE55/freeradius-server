# -*- text -*-
#
# :toc:
#
#  $Id$

#######################################################################
#
#  = Passwd Module
#
# The `passwd` module allows to do authorization via any passwd-like
# file and to extract any attributes from these files.
#
# See the `smbpasswd` and `etc_group` files for more examples.
#

#  ## Sample
#
#  An example configuration for using `/etc/passwd`.
#
#  This is an example which will NOT WORK if you have shadow passwords,
#  NIS, etc.  The `unix` module is normally responsible for reading
#  system passwords.  You should use it instead of this example.
#
passwd etc_passwd {
	#
	# filename:: Path to file.
	#
	filename = /etc/passwd

	#
	# delimiter::
	#
	# Symbol to use as a field separator in passwd file.
	#
	# WARNING: The symbols `\0` and `\n` are not allowed.
	#
	# Default is `:`
	#
#	delimiter = ":"

	#
	# format::
	#
	# This parameters correlates record in the `passwd` file and RADIUS
	# attributes.
	#
	# * Field marked as `*` is a key field. That is, the parameter with
	# this name from the request is used to search for the record from
	# passwd file.
	#
	# * Attributes marked as `=` are added to `reply_items` instead of
	# default `configure_items`.
	#
	# * Attributes marked as `~` are added to `request_items`.
	#
	# * Field marked as `,` may contain a comma separated list of attributes.
	#
	format = "*User-Name:Crypt-Password:"

	#
	# hash_size::
	#
	# A future version of the server will have the module automatically
	# determine the hash size.  Having it set manually should not be
	# necessary.
	#
	# WARNING: Setting it to `0` is no longer permitted.
	#
	hash_size = 100

	#
	# ignore_nislike:: Ignore NIS-related records.
	#
	ignore_nislike = no

	#
	# allow_multiple_keys:: if many records for a key are allowed.
	#
	allow_multiple_keys = no
}
