
sqlippool sqlippool {

 #
 # SQL connection information
 #
 sql-instance-name = "sql"

 # lease_duration. fix for lost acc-stop packets
 lease-duration = 3600


#
# This series of queries allocates an IP address
#
allocate-clear = "UPDATE radippool \
                  SET nas_ip_address = '', nas_port = 0, calling_station_id = '', \
		      expiry_time = 'now'::timestamp(0) - '1 second'::interval \
		  WHERE poolkey = '%{config:}' AND nas_port = '%{Nas-Port}'"

#note the ORDER BY clause of next query, it'll try to allocate IPs
#like Cisco internal pools do - it _trys_ to allocate the same IP-address
#which user had last session...
allocate-find = "SELECT ip_address FROM radippool \
                 WHERE pool_name = '%{Pool-Name}' AND expiry_time < 'now'::timestamp(0) \
		 ORDER BY pool_name, (username <> '%{User-Name}'), (calling_station_id <> '%{Calling-Station-Id}'), expiry_time \
		 LIMIT 1 \
		 FOR UPDATE"

allocate-update = "UPDATE radippool \
                   SET nas_ip_address = '%{NAS-IP-Address}', nas_port = '%{NAS-Port}', \
		       calling_station_id = '%{Calling-Station-Id}', \
		       username = '%{User-Name}', \
		       expiry_time = 'now'::timestamp(0) + '%{config:modules.sqlippool.main_pool.lease-duration} second'::interval \
		   WHERE ip_address = '%I'"




#
# This series of queries frees an IP when an accounting
# START record arrives
#
start-update = "UPDATE radippool \
                SET expiry_time = 'now'::timestamp(0) + '%J second'::interval \
		WHERE nas_ip_address = '%n' AND nas_port = '%p' AND pool_name = '%P'"
#
# This series of queries frees an IP number when an accounting
# STOP record arrives
#
stop-clear = "UPDATE radippool \
              SET nas_ip_address = '', nas_port = 0, calling_station_id = '', \
	          expiry_time = 'now'::timestamp(0) - '1 second'::interval \
	      WHERE nas_ip_address = '%n' AND nas_port = '%p' AND pool_name = '%P'"




#
# This series of queries frees an IP when an accounting
# ALIVE record arrives
#
alive-update = "UPDATE radippool \
	        SET expiry_time = 'now'::timestamp(0) + '%J second'::interval \
		WHERE nas_ip_address = '%n' AND nas_port = '%p' AND pool_name = '%P'"





#
# This series of queries frees the IP allocate to a
# NAS when an accounting ON record arrives
#
on-clear = "UPDATE radippool \
            SET nas_ip_address = '', nas_port = 0, calling_station_id = '', \
	        expiry_time = 'now'::timestamp(0) - '1 second'::interval \
	    WHERE nas_ip_address = '%n' AND pool_name = '%P'"
#
# This series of queries frees the IP numbers allocate to a
# NAS when an accounting OFF record arrives
#
off-clear = "UPDATE radippool \
             SET nas_ip_address = '', nas_port = 0, calling_station_id = '', \
	         expiry_time = 'now'::timestamp(0) - '1 second'::interval \
	     WHERE nas_ip_address = '%n' AND pool_name = '%P'"

}

