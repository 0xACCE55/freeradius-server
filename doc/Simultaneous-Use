
	FreeRadius and the Simultaneous-Use parameter.


0. INTRODUCTION

  Lots of people want to limit the number of times one user account can
  login, usually to one. This is hard to do with the radius protocol;
  the nature of the accounting stuff is such that the idea the radius server
  has about the list of logged-in users might be different from the idea
  the terminal server has about it.

  However since ComOS 3.7 there is the possibility to get the list of logged
  in users through SNMP from a portmaster. So if the radius server thinks
  that someone is trying to login a second time, it is possible to check
  on the terminal server itself if the first login is indeed still active.
  Only then access is denied for the second login.


1. PREREQUISITES

  You need to have perl installed.

  For SNMP checks, you have 2 options. You can use the `snmpget' program
  from the cmu-snmp tools. You can probably get precompiled ones,
  maybe even packaged for your system (Debian/Linux, Redhat/Linux, FreeBSD
  ports collection etc). The source code is at
  http://www.net.cmu.edu/projects/snmp/snmpapps/. The Linux-specific
  version of this is at http://www.gaertner.de/snmp/

  The other option is to install the SNMP_Session and BER modules that
  come with mrtg - http://ee-staff.ethz.ch/~oetiker/webtools/mrtg/mrtg.html
  In that case you need no external snmpget program, checkrad will
  speak SNMP directly.

  The checkroutine for USR/3Com Total Control, NetServer racks and
  Cyclades PathRAS uses the Net::Telnet module from CPAN, at least version
  3.00. If you need that, obtain it from your local CPAN mirror (or see
  http://www.perl.com/CPAN/). The checkrad.pl perl script will autodetect if
  that module is installed.

2. USAGE.

  It works by adding the `check' parameter "Simultaneous-Use" to the entry
  for a users or DEFAULT in /etc/raddb/users. It should be at least one;
  it defines the maximum number of users logged in with the same account name.
  For example:

  #
  # Simultaneous use restrictions.
  #
  DEFAULT Group = "staff", Simultaneous-Use = 4
          Fall-Through = 1
  DEFAULT Group = "business", Simultaneous-Use = 2
          Fall-Through = 1
  DEFAULT Simultaneous-Use = 1
          Fall-Through = 1


  NOTE!!! The "Simultaneous-Use" parameter is in the "check" A/V pairs,
          and not in the Reply A/V pairs (it _is_ a check).

3. IMPLEMENTATION

  As soon as the radius server thinks it sees a double login, it executes the
  perl script /usr/local/sbin/checkrad (or /usr/sbin/checkrad, it checks for
  the presence of both and in that order). This script queries the terminal
  server too see if the user is indeed logged in.

  The script uses SNMP for Livingston Portmasters, Ciscos and Patton,
  finger for Portslave, Computone and Ascend, and Net::Telnet for USR/3Com
  TC and Cyclades PathRAS.

  Since the script has been witten in perl, it's easy to adjust for
  any type of terminal server. There are implementations in the script for
  checks using SNMP, finger, and telnet, so it should be easy to add
  your own check routine if your terminal server is not supported yet.

  You can find the script in the file src/checkrad.pl.

  You need to set the correct type in the file /etc/raddb/naslist so that
  checkrad KNOWS how it should interrogate the terminal server. At this
  time you can define the following types:

  type        Vendor      Uses method     needs               Need naspasswd
  ====        ======      ===========     =====               ==============
  cisco       Cisco       SNMP            SNMP                No
  computone   Computone   finger          -                   No
  livingston  Livingston  SNMP            SNMP                No	[1]
  max40xx     Lucent      finger          -                   No
  ascend      Lucent      SNMP            SNMP                No
  multitech   Multitech   SNMP            SNMP                No
  netserver   USR/3com    telnet          CPAN Net::Telnet    Yes
  pathras     Cyclades    telnet          CPAN Net::Telnet    Yes
  patton      Patton      SNMP            SNMP                No
  portslave   ?           finger          -                   No
  tc          USR/3com    telnet          CPAN Net::Telnet    Yes
  usrhiper    USR/3com    SNMP            SNMP                No	[2]
  versanet    VersaNet    SNMP            SNMP                No

  [1] Needs at least ComOS 3.5, SNMP enabled.
  [2] Set "Reported Port Desity" to 256 (default)

4. IF IT DOESN'T WORK

  You can edit the `checkrad' perl script and turn on debugging. Then
  watch the debug file. The `radius.log' file also gives some hints.

  Note that you need to add the Simultaneous-Login parameter to the
  check item (first line), not the reply item.

  A portmaster numbers the ports in the SNMP protocol from 1 to XX. The
  perl script tries to find out which ones relates to S0 and calculates the
  SNMP offset from that. However with a PM3 there is a "gap" in the S ports.
  With a European ISDN-30 line, S30 and S31 do not exist. In the US, I think
  that S23 might be skipped (try a `show sessions' on the portmaster). The
  perl script catches the European situation, but needs to be adjusted for
  the American situation. Perhaps this can be made reasonably automatic by
  looking at what timezone we're in :)

5. CAVEATS

  This solution checks the radutmp file. This file is kept up-to-date from
  the Accounting records the NAS sends. Since some NASes delay these records
  for quite some time, it is possible to get a double login by loggin in
  twice at _exactly_ the same time (plus or minus the mentioned delay time),
  since neither of the logins are registered yet.

  The solution would be to create a small 1-minute cache of Authentication
  records, that is also checked for double login attempts. Perhaps in the
  next version.

  When implementing this one thing was considered the most important: when
  trying to detect double logins, we always try to err on the safe side. So
  in rare cases, a double login is possible but we try never to limit access
  for a legitimate login.

6. PROBLEMS WITH DROPPED CONNECTIONS

  Our PM3, with 2 ISDN-30 lines coming into it, had the habit of sometimes
  dropping connections. In a few cases, the portmaster thought the session was
  still alive so if the user tried to login again, he or she was denied access.
  In our case, this problem was caused by a bad PRI line from the phone
  company.

  We tried to compensate this by setting the Idle-Timeout to 15 minutes. That
  way, even if a user did get locked out the portmaster would clear the rogue
  session within 15 minutes and the user could login again.

